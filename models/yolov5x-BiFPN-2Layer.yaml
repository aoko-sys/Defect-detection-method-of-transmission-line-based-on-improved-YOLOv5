# parameters
nc: 1  # number of classes
depth_multiple: 1.33  # model depth multiple
width_multiple: 1.25  # layer channel multiple


# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 backbone
backbone:                                   # input=640,640,3
  # [from, number, module, args]             size in out
  [[-1, 1, Focus, [64, 3]],     # 0-P1/2     320  3, 80
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4     160  80,160
   [-1, 3, C3, [128]],          #            160  160,160
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8      80  160, 320
   [-1, 9, C3, [256]],          # 4           80  320, 320
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16     40  320, 640
   [-1, 9, C3, [512]],          # 6           40  640, 640
   [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32     20  640, 1280
   [-1, 1, SPP, [1024, [5, 9, 13]]], # 8      20  1280, 1280
   [-1, 3, C3, [1024, False]],  # 9           20 1280, 1280
  ]

# YOLOv5 head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 10                  20  1280, 640
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 11  40  640, 640
   [[-1, 6], 1, Concat, [640, 640]],  # 12            40  (40,40,640)+(40,40,640)
   [-1, 3, C3, [512, False]],  # 13  #                40  640, 640

   [-1, 1, Conv, [256, 1, 1]], #14                    40  640, 320
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],      # 80  320, 320
   [[-1, 4], 1, Concat, [320, 320]],  # 16            80 (80,80,320)+(80,80,320)
   [-1, 3, C3, [256, False]],  # 17                   80  320, 320

#   [-1, 1, Conv, [256, 1, 1]],   # 320, 320
   [-1, 1, Conv, [512, 3, 2]],   #                    40  320, 640
   [[-1, 6, 13], 1, Concat, [640, 640]],  #           40  (40,40,640)+(40,40,640)
   [-1, 3, C3, [512, False]],  # 20                 # 40  640, 640

#   [-1, 1, Conv, [512, 1, 1]], # 640, 640
   [-1, 1, Conv, [1024, 3, 2]], #                     20  640, 1280
   [[-1, 9], 1, Concat, [1280, 1280]],  #             20  (20,20,1280)+(20,20,1280)
   [-1, 3, C3, [1024, False]],  # 23               #  20  1280, 1280

#   [[17, 21, 25], 1, Detect, [nc, anchors]] # Detect(P3, P4, P5)
#   [[17, 20, 23], 1, Detect, [nc, anchors]] # Detect(P3, P4, P5)
#  ]

   # layer 2
    [-1, 1, Conv, [512, 1, 1]],  # 24                20  1280  640
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],  #   40  640   640
    [[-1, 20], 1, Concat, [640, 640]],  #            40  (40,40,640)+(40,40,640)
    [-1, 3, C3, [512, False]],  # 27  # 640, 640     40   640  640

    [-1, 1, Conv, [256, 1, 1]], #                    40  640  320
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],  #   80  320  320
    [[-1, 17], 1, Concat, [320, 320]],  #            80  (80,80,320)+(80,80,320)
    [-1, 3, C3, [256, False]],  # 31                #  80  320  320

    #[-1, 1, Conv, [256, 1, 1]],   #                  80  320  320
    [-1, 1, Conv, [512, 3, 2]],   # 320, 640 #       40  320  640
    [[-1, 20, 27], 1, Concat, [640, 640]],  #        40  (40,40,640)+(40,40,640)
    [-1, 3, C3, [512, False]],  # 34                 40  640, 640

    #[-1, 1, Conv, [512, 1, 1]], #                    40  640  640
    [-1, 1, Conv, [1024, 3, 2]], #                   20  640, 1280
    [[-1, 23], 1, Concat, [1280, 1280]],  #          20  (20,20,1280)+(20,20,1280)
    [-1, 3, C3, [1024, False]],  # 37                20  1280  1280

    [[31, 34, 37], 1, Detect, [nc, anchors]],
 ]